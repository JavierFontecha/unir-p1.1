pipeline {
    agent any

    stages {
        stage('prepare') {
            steps {
                sh 'echo $WORKSPACE'
                sh 'ls -la'
            }
        }

        stage('build') {
            steps {
                sh '''
                    python3 -m venv venv
                    . venv/bin/activate > /dev/null 2>&1
                    pip install -r requirements/requirements.txt
                    ls
                '''
            }
        }
        
        stage('services') {
            steps{
                sh '''
                    . venv/bin/activate > /dev/null 2>&1
                
                    export FLASK_APP=app/api.py
                    export PYTHONPATH=.
                    flask run &
                    
                    java -jar /home/wiremock/wiremock-standalone-3.10.0.jar --root-dir=test/wiremock/ --port 9090 &
                                        
                '''
                
            }
        }
        
        stage('tests') {
            parallel {
                stage('unit') {
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            sh '''
                                export PYTHONPATH=.
                                . venv/bin/activate > /dev/null 2>&1
                                pytest --junitxml=result.unit.xml test/unit
                            '''
                        }
                    }
                }
        
                stage('rest') {
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            sh '''
                                export PYTHONPATH=.
                                . venv/bin/activate > /dev/null 2>&1
                                pytest --junitxml=result.rest.xml test/rest
                            '''
                        }
                    }
                }
            }
        }

        stage('results') {
            steps {
                junit 'result*.xml'
            }
        }
    }
}
