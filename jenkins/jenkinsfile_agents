pipeline {
    agent { label 'master' }
    stages {
        stage('prepare') {
            steps {
                echo "Corriendo en el nodo: ${env.NODE_NAME}"
                sh '''
                    echo Directorio de trabajo: $WORKSPACE
                    whoami
                    hostname
                    ls -la
                '''
            }
        }

        stage('build') {
            steps {
                echo "Corriendo en el nodo: ${env.NODE_NAME}"
                sh '''
                    echo Directorio de trabajo: $WORKSPACE
                    whoami
                    hostname
                    python3 -m venv venv
                    . venv/bin/activate > /dev/null 2>&1
                    pip install -r requirements/requirements.txt
                    ls
                '''
                stash name: 'workspace', includes: '**/*'
            }
        }

        stage('services') {
            steps {
                echo "Corriendo en el nodo: ${env.NODE_NAME}"
                unstash 'workspace'
                sh '''
                    echo Directorio de trabajo: $WORKSPACE
                    whoami
                    hostname
                    . venv/bin/activate > /dev/null 2>&1
                    
                    export FLASK_APP=app/api.py
                    export PYTHONPATH=.
                    flask run &
                    
                    java -jar /home/wiremock/wiremock-standalone-3.10.0.jar --root-dir=test/wiremock/ --port 9090 &
                    
                    sleep 10
                '''
            }
        }

        stage('tests') {
            
            parallel {
                stage('unit') {
                    agent { label 'agent1' }
                    steps {
                        echo "Corriendo en el nodo: ${env.NODE_NAME}"
                        unstash 'workspace'
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            sh '''
                                echo Directorio de trabajo: $WORKSPACE
                                whoami
                                hostname
                                export PYTHONPATH=.
                                . venv/bin/activate > /dev/null 2>&1
                                pytest --junitxml=result.unit.xml test/unit
                            '''
                        }
                        stash name: 'unit-results', includes: 'result.unit.xml'
                    }
                }
                stage('rest') {
                    agent { label 'agent2' }
                    steps {
                        echo "Corriendo en el nodo: ${env.NODE_NAME}"
                        unstash 'workspace'
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            sh '''
                                echo Directorio de trabajo: $WORKSPACE
                                whoami
                                hostname
                                export PYTHONPATH=.
                                . venv/bin/activate > /dev/null 2>&1
                                pytest --junitxml=result.rest.xml test/rest
                            '''
                        }

                        stash name: 'rest-results', includes: 'result.rest.xml'
                    }
                }
            }
        }

        stage('results') {
            steps {
                echo "Corriendo en el nodo: ${env.NODE_NAME}"
                sh '''
                    echo Directorio de trabajo: $WORKSPACE
                    whoami
                    hostname
                '''
                unstash 'unit-results'
                unstash 'rest-results'

                junit 'result*.xml'
            }
        }
    }
}
